// <auto-generated />
using System;
using Infraestrutura.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20250315181135_adicionandovisitante")]
    partial class adicionandovisitante
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API.Models.CadEndereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CadVisitanteId")
                        .HasColumnType("int");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CadVisitanteId");

                    b.ToTable("CadEndereco");
                });

            modelBuilder.Entity("API.Models.CadFuncionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("CargaHorariaDiaria")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CargaHorariaSemanal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DiasDaSemana")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan>("HorarioFinal")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HorarioInicio")
                        .HasColumnType("time(6)");

                    b.Property<bool>("IsAtivo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SenhaSalt")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CadFuncionario");
                });

            modelBuilder.Entity("API.Models.CadProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CadProduto");
                });

            modelBuilder.Entity("API.Models.CadUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CadUsuario");
                });

            modelBuilder.Entity("API.Models.CadVisitante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsPresente")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("CadVisitante");
                });

            modelBuilder.Entity("API.Models.MovRegistroPonto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<Guid>("CadUsuarioId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CadUsuarioId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("HorarioEntrada")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HorarioSaida")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HorasTrabalhadas")
                        .HasColumnType("time(6)");

                    b.Property<string>("Justificativa")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CadUsuarioId1");

                    b.ToTable("MovRegistroPonto");
                });

            modelBuilder.Entity("API.Models.CadEndereco", b =>
                {
                    b.HasOne("API.Models.CadVisitante", "CadVisitante")
                        .WithMany()
                        .HasForeignKey("CadVisitanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadVisitante");
                });

            modelBuilder.Entity("API.Models.MovRegistroPonto", b =>
                {
                    b.HasOne("API.Models.CadUsuario", "CadUsuario")
                        .WithMany()
                        .HasForeignKey("CadUsuarioId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CadUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
